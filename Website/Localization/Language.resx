<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddToCalendar" xml:space="preserve">
    <value>Add to Outlook (or other)</value>
  </data>
  <data name="AddToGoogleCalendar" xml:space="preserve">
    <value>Add to Google Calendar</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>contact us</value>
  </data>
  <data name="InvitationEmailBody" xml:space="preserve">
    <value>Dear {InformalName},

It is our pleasure to invite you to our wedding, which will take place on August 24 at 5 PM. 

A detailed invitation is waiting for you on our web site: http://www.sheetalandlaurent.com/invitations/{Id}
It contains all the information about the event along with an RSVP form.

Please let us know before July 31 if you can attend.

We hope to see you at our wedding!

Laurent and Sheetal</value>
  </data>
  <data name="EmailConfirmedNo" xml:space="preserve">
    <value>Hello,

Thank you for having answered our wedding invitation.  We regret that you will not be able to attend; your presence will be missed. 

We invite you to contact us in case of error or for any other question.

Regards,

Sheetal and Laurent</value>
  </data>
  <data name="EmailConfirmedYes" xml:space="preserve">
    <value>Hello,

Thank you for having confirmed your attendance ({Guests} guest(s)) at our wedding.  It’s a pleasure to have you join us. 

We invite you to contact us in case of questions or specific needs.

See you soon!

Sheetal and Laurent</value>
  </data>
  <data name="EmailPhotosBody" xml:space="preserve">
    <value>Hello,

Many of you have expressed a desire to see the pictures taken during the evening. Therefore, we created a website for you to view them: http://photos.lebeaumartin.com/Wedding

The website contains 11 (!!) photo galleries, each one taken by a different photographer. There are eight galleries covering the wedding, one small gallery for the installation before the wedding and two galleries for the evening on the day before the wedding (the henna party, Mendhi).

One or two more galleries will be added in the next few days with the photos taken by Sheetal's uncle Naresh.

Regards,

Sheetal and Laurent</value>
  </data>
  <data name="EmailPhotosSubject" xml:space="preserve">
    <value>Wedding Photos</value>
  </data>
  <data name="InvitationEmailSubject" xml:space="preserve">
    <value>Wedding Invitation</value>
  </data>
  <data name="EnterInviteCode" xml:space="preserve">
    <value>Please enter your invitation code:</value>
  </data>
  <data name="ForMoreInformation" xml:space="preserve">
    <value>For more information, do not hesitate to</value>
  </data>
  <data name="HowManyWillYouBe" xml:space="preserve">
    <value>How many will you be?</value>
  </data>
  <data name="IntroHtml" xml:space="preserve">
    <value>&lt;p class="lead"&gt;
    Your love and friendship have helped us become who we are.
&lt;br&gt;
    Together with our parents,
    we invite you to share our joy
    and support our love,
&lt;br&gt;
    as two best friends become husband and wife.
&lt;br&gt;
    Please join us for a celebration of love, friendship,
    laughter and family.
&lt;br&gt;
    Fabulous food, fun, and festivities will follow!
&lt;/p&gt;
&lt;p&gt;
    &amp;mdash; Laurent &amp;amp; Sheetal
&lt;/p&gt;</value>
  </data>
  <data name="InvalidCode" xml:space="preserve">
    <value>Invalid code</value>
  </data>
  <data name="InvitationFor" xml:space="preserve">
    <value>Invitation for:</value>
  </data>
  <data name="MapTitle" xml:space="preserve">
    <value>Just show me a map</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoInviteCode" xml:space="preserve">
    <value>If you lost your invitation code, please</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note:</value>
  </data>
  <data name="NotificationBody" xml:space="preserve">
    <value>Invitee: {FullName}
Email: {Email}
Will attend? {IsAttending}
Guests? {Guests} / {AllowedGuests}
Note: {Note}</value>
  </data>
  <data name="NotificationSubject" xml:space="preserve">
    <value>{InformalName} replied to the wedding invitation!</value>
  </data>
  <data name="PhotoAlt" xml:space="preserve">
    <value>The happy couple</value>
  </data>
  <data name="ReminderBody" xml:space="preserve">
    <value>Hello,

Just a quick reminder that our wedding is next week, Saturday August 24th! You are expected at 5 PM; the ceremony will start shortly after.

The address:
Le Manoir
5319 avenue Notre-Dame-de-Grâce
Montréal, Québec
H4A 1L2 Canada 

Google Maps: http://goo.gl/fA4zVc

We can’t wait to see you all!

Regards,

Sheetal and Laurent</value>
  </data>
  <data name="ReminderSubject" xml:space="preserve">
    <value>Reminder: Wedding next week!</value>
  </data>
  <data name="RsvpDeadline" xml:space="preserve">
    <value>Please submit your answer &lt;strong&gt;before July 31th, 2013.&lt;/strong&gt;</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Your response has successfully been sent. Thank you!</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SwitchLanguage" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="SwitchLanguageUrl" xml:space="preserve">
    <value>http://www.sheetaletlaurent.com</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Sheetal &amp; Laurent are getting married!</value>
  </data>
  <data name="ViewLargerMap" xml:space="preserve">
    <value>View larger map</value>
  </data>
  <data name="WhenHtml" xml:space="preserve">
    <value>Saturday,&lt;br /&gt;
&lt;span class="huge label"&gt;24&lt;/span&gt;&lt;br /&gt;
August 2013 at &lt;strong&gt;17:00&lt;/strong&gt;</value>
  </data>
  <data name="WhenTitle" xml:space="preserve">
    <value>When?</value>
  </data>
  <data name="WhereHtml" xml:space="preserve">
    <value>&lt;strong&gt;Le Manoir&lt;/strong&gt;&lt;br /&gt;
5319 avenue Notre-Dame-de-Grâce&lt;br /&gt;
Montréal, Québec&lt;br /&gt;
H4A 1L2 Canada</value>
  </data>
  <data name="WhereTitle" xml:space="preserve">
    <value>Where?</value>
  </data>
  <data name="WillYouBeAttending" xml:space="preserve">
    <value>Will you be attending?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YourInvitation" xml:space="preserve">
    <value>Your invitation</value>
  </data>
</root>